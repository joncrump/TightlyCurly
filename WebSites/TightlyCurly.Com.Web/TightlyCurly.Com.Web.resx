<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutMyHairDescription" xml:space="preserve">
    <value>My Hair History</value>
  </data>
  <data name="aboutMyHairTitle" xml:space="preserve">
    <value>About My Hair</value>
  </data>
  <data name="aboutPageDescription" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="aboutPageTitle" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="acceptableText" xml:space="preserve">
    <value>Okay</value>
  </data>
  <data name="alsoKnownAs" xml:space="preserve">
    <value>(aka {0})</value>
  </data>
  <data name="answerBankDescription" xml:space="preserve">
    <value>Answer Bank</value>
  </data>
  <data name="answerBankTitle" xml:space="preserve">
    <value>Answer Bank</value>
  </data>
  <data name="availableSubscriptions" xml:space="preserve">
    <value>Available Subscriptions</value>
  </data>
  <data name="avoidText" xml:space="preserve">
    <value>Avoid</value>
  </data>
  <data name="beforeAndAfterDescription" xml:space="preserve">
    <value>Before and After</value>
  </data>
  <data name="beforeAndAfterTitle" xml:space="preserve">
    <value>Befores and Afters</value>
  </data>
  <data name="blogDescription" xml:space="preserve">
    <value>Notes of a Former Mushroom Haired Child</value>
  </data>
  <data name="blogTitle" xml:space="preserve">
    <value>Blog</value>
  </data>
  <data name="cautionText" xml:space="preserve">
    <value>Caution</value>
  </data>
  <data name="chooseCategoryText" xml:space="preserve">
    <value>Please select a letter to search for ingredients:</value>
  </data>
  <data name="combingConditionersDescription" xml:space="preserve">
    <value>Recommended Combing Conditioners</value>
  </data>
  <data name="combingConditionersTitle" xml:space="preserve">
    <value>Combing Conditioners</value>
  </data>
  <data name="commentsText" xml:space="preserve">
    <value>Questions/Comments:</value>
  </data>
  <data name="commentsToolTip" xml:space="preserve">
    <value>Please enter your questions/comments here</value>
  </data>
  <data name="commentsValidationMessage" xml:space="preserve">
    <value>Please enter a question and/or comment</value>
  </data>
  <data name="communityDescription" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="communityTitle" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="contactMeDescription" xml:space="preserve">
    <value>Contact Me</value>
  </data>
  <data name="contactMeTitle" xml:space="preserve">
    <value>Contact Me</value>
  </data>
  <data name="curlyPrimerDescription" xml:space="preserve">
    <value>Very Curly Hair Primer</value>
  </data>
  <data name="curlyPrimerTitle" xml:space="preserve">
    <value>Curly Primer</value>
  </data>
  <data name="emailMeText" xml:space="preserve">
    <value>Email Me</value>
  </data>
  <data name="emailText" xml:space="preserve">
    <value>Email Address:</value>
  </data>
  <data name="emailToolTip" xml:space="preserve">
    <value>Please enter your email address</value>
  </data>
  <data name="emailValidationMessage" xml:space="preserve">
    <value>Please enter a valid email</value>
  </data>
  <data name="externalLinksText" xml:space="preserve">
    <value>Source(s): </value>
  </data>
  <data name="faqsDescription" xml:space="preserve">
    <value>Frequently Asked Questions</value>
  </data>
  <data name="faqsTitle" xml:space="preserve">
    <value>FAQs</value>
  </data>
  <data name="firstNameText" xml:space="preserve">
    <value>First Name:</value>
  </data>
  <data name="firstNameToolTip" xml:space="preserve">
    <value>Please enter your first name</value>
  </data>
  <data name="firstNameValidationMessage" xml:space="preserve">
    <value>First name is required</value>
  </data>
  <data name="goodText" xml:space="preserve">
    <value>Good</value>
  </data>
  <data name="growItOutDescription" xml:space="preserve">
    <value>Growing It Out</value>
  </data>
  <data name="growItOutTitle" xml:space="preserve">
    <value>Growing It Out</value>
  </data>
  <data name="hairShotsDescription" xml:space="preserve">
    <value>Hair Shots</value>
  </data>
  <data name="hairShotsTitle" xml:space="preserve">
    <value>Hair Shots</value>
  </data>
  <data name="ingredientsDescription" xml:space="preserve">
    <value>Ingredients Dictionary for Hair Care Products</value>
  </data>
  <data name="ingredientsTitle" xml:space="preserve">
    <value>Ingredients Dictionary </value>
  </data>
  <data name="lastNameText" xml:space="preserve">
    <value>Last Name:</value>
  </data>
  <data name="lastNameToolTip" xml:space="preserve">
    <value>Please enter your last name</value>
  </data>
  <data name="lastNameValidationMessage" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="manageSubscriptionsTitle" xml:space="preserve">
    <value>Manage Your Subscriptions</value>
  </data>
  <data name="nameText" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="nameToolTip" xml:space="preserve">
    <value>Please enter your name</value>
  </data>
  <data name="nameValidationMessage" xml:space="preserve">
    <value>Your name is required</value>
  </data>
  <data name="notesDescription" xml:space="preserve">
    <value>Notes On Our Hair</value>
  </data>
  <data name="notesTitle" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="photoHistoryDescription" xml:space="preserve">
    <value>Photo History of My Hair</value>
  </data>
  <data name="photoHistoryTitle" xml:space="preserve">
    <value>Photo History</value>
  </data>
  <data name="productsDescription" xml:space="preserve">
    <value>Products I Recommend</value>
  </data>
  <data name="productsTitle" xml:space="preserve">
    <value>Recommended Products</value>
  </data>
  <data name="recommendedHairToolsDescription" xml:space="preserve">
    <value>Recommended Hair Tools</value>
  </data>
  <data name="recommendedHairToolsTitle" xml:space="preserve">
    <value>Hair Tools</value>
  </data>
  <data name="recommendedReadingDescription" xml:space="preserve">
    <value>Recommended Reading</value>
  </data>
  <data name="recommendedReadingTitle" xml:space="preserve">
    <value>Recommended Reading</value>
  </data>
  <data name="relatedLinksText" xml:space="preserve">
    <value>See also:</value>
  </data>
  <data name="rinsingConditionersDescription" xml:space="preserve">
    <value>Recommended Rinsing Conditioners</value>
  </data>
  <data name="rinsingConditionersTitle" xml:space="preserve">
    <value>Rinsing Conditioners</value>
  </data>
  <data name="selectSubTopicText" xml:space="preserve">
    <value>Please select a subtopic</value>
  </data>
  <data name="selectTopicText" xml:space="preserve">
    <value>Please select a topic</value>
  </data>
  <data name="shampoosDescription" xml:space="preserve">
    <value>Recommended Shampoos</value>
  </data>
  <data name="shampoosTitle" xml:space="preserve">
    <value>Shampoos</value>
  </data>
  <data name="shopDescription" xml:space="preserve">
    <value>Shop With Teri</value>
  </data>
  <data name="shopTitle" xml:space="preserve">
    <value>Shop With Teri</value>
  </data>
  <data name="signUpForBookUpdates" xml:space="preserve">
    <value>Sign me up for book updates!</value>
  </data>
  <data name="submitCommentsText" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="submitCommentsToolTip" xml:space="preserve">
    <value>Click here to submit comments</value>
  </data>
  <data name="subscribeGroupText" xml:space="preserve">
    <value>Sign Up For Our Newsletter</value>
  </data>
  <data name="subscribeText" xml:space="preserve">
    <value>Sign Me Up!</value>
  </data>
  <data name="subscribeToolTip" xml:space="preserve">
    <value>Click here to sign up for our newsletter</value>
  </data>
  <data name="subTopicsText" xml:space="preserve">
    <value>Select a subtopic:</value>
  </data>
  <data name="thankYouNewletterSignUp" xml:space="preserve">
    <value>Hi, {0}! Thank you so much for subscribing to my newsletter!</value>
  </data>
  <data name="thankYouNewsletterSubject" xml:space="preserve">
    <value>Thank you for subscribing to the TightlyCurly.org newsletter!</value>
  </data>
  <data name="theRulesDescription" xml:space="preserve">
    <value>How to Take Care of Our Hair: The Rules</value>
  </data>
  <data name="theRulesTitle" xml:space="preserve">
    <value>The Rules</value>
  </data>
  <data name="tipsForChildrenDescription" xml:space="preserve">
    <value>Tips for Little Ones</value>
  </data>
  <data name="tipsForChildrenTitle" xml:space="preserve">
    <value>Tips for Little Ones</value>
  </data>
  <data name="topicsText" xml:space="preserve">
    <value>Select a topic:</value>
  </data>
  <data name="videosDescription" xml:space="preserve">
    <value>How-To Videos</value>
  </data>
  <data name="videosTitle" xml:space="preserve">
    <value>How-To Videos</value>
  </data>
  <data name="welcomeDescription" xml:space="preserve">
    <value>Welcome to the Tightly Curly Hair Site</value>
  </data>
  <data name="welcomeTitle" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="yourSubscriptions" xml:space="preserve">
    <value>Your Subscriptions</value>
  </data>
  <data name="answerText" xml:space="preserve">
    <value>Answer:</value>
  </data>
  <data name="noQuestionsFoundForTopicText" xml:space="preserve">
    <value>No question(s) found for this topic.</value>
  </data>
  <data name="questionText" xml:space="preserve">
    <value>Question:</value>
  </data>
  <data name="noSearchTermErrorMessage" xml:space="preserve">
    <value>Please enter a search term.</value>
  </data>
  <data name="underConstructionContent" xml:space="preserve">
    <value>This page is under construction</value>
  </data>
  <data name="underConstructionDescription" xml:space="preserve">
    <value>Under Construction</value>
  </data>
  <data name="underConstructionTitle" xml:space="preserve">
    <value>Under Construction</value>
  </data>
  <data name="formattedSpan" xml:space="preserve">
    <value>&lt;div class="pageTitleDropLetter"&gt;{0}&lt;/div&gt;</value>
  </data>
  <data name="ingredientsStartingWith" xml:space="preserve">
    <value>Ingredients Starting With {0}</value>
  </data>
</root>